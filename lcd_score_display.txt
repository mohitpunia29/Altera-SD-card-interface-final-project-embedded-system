#include<stdio.h>
#include<system.h>
#include<stdlib.h>
#include"ALTERA_AVALON_PIO_REGS.h"
#include"ALTERA_AVALON_TIMER_REGS.h"
#include"ALTERA_AVALON_TIMER.h"
#include"altera_avalon_jtag_uart_regs.h"
#include"altera_avalon_jtag_uart.h"
#include "sys/alt_irq.h"
#include <unistd.h>
#include "altera_up_avalon_character_lcd.h"
#include "Altera_UP_SD_Card_Avalon_Interface.h"
#include "altera_up_avalon_character_lcd_regs.h"
int rd;
char a;

void lcd_init( void) {

 usleep(15000); /* Wait for more than 15 ms before init */
 /* Set function code four times -- 8-bit, 2 line, 5x7 mode */
 IOWR_ALT_UP_CHARACTER_LCD_COMMAND(CHARACTER_LCD_0_BASE,0x38);
 usleep(4100); /* Wait for more than 4.1 ms */
 IOWR_ALT_UP_CHARACTER_LCD_COMMAND(CHARACTER_LCD_0_BASE,0x38);
 usleep(100); /* Wait for more than 100 us */
 IOWR_ALT_UP_CHARACTER_LCD_COMMAND(CHARACTER_LCD_0_BASE,0x38);
 usleep(5000); /* Wait for more than 100 us */
 IOWR_ALT_UP_CHARACTER_LCD_COMMAND(CHARACTER_LCD_0_BASE,0x38);
 usleep(100); /* Wait for more than 100 us */

 /* Set Display to OFF*/
 IOWR_ALT_UP_CHARACTER_LCD_COMMAND(CHARACTER_LCD_0_BASE,0x38);
 usleep(100);

 /* Set Display to ON */
 IOWR_ALT_UP_CHARACTER_LCD_COMMAND(CHARACTER_LCD_0_BASE, 0x0C);
 usleep(100);

 /* Set Entry Mode -- Cursor increment, display doesn't shift */
 IOWR_ALT_UP_CHARACTER_LCD_COMMAND(CHARACTER_LCD_0_BASE, 0x06);
 usleep(100);

 /* Set the Cursor to the home position */
 IOWR_ALT_UP_CHARACTER_LCD_COMMAND(CHARACTER_LCD_0_BASE, 0x02);
 usleep(2000);

 /* Display clear */
 IOWR_ALT_UP_CHARACTER_LCD_COMMAND(CHARACTER_LCD_0_BASE, 0x01);
 usleep(2000);
}
alt_u32 test_lcd( void)
{
int i=158,j=0;
	char ar[10]="0123456789";
	char str[6]="SCORE ";
	int a=i/10;
		for(j=0;j<6;j++)
		{IOWR_ALT_UP_CHARACTER_LCD_DATA(CHARACTER_LCD_0_BASE, str[j]);}
		if(a>0)
		IOWR_ALT_UP_CHARACTER_LCD_DATA(CHARACTER_LCD_0_BASE, ar[a]);
if(i%10 >0)
	a=i%10;
	IOWR_ALT_UP_CHARACTER_LCD_DATA(CHARACTER_LCD_0_BASE, ar[a]);
}
int main()
{
	IOWR_ALT_UP_CHARACTER_LCD_COMMAND(CHARACTER_LCD_0_BASE, 0x01);
	lcd_init();
	test_lcd();
	init_pio();
	while(1)
	{
	}
	return 0;
	}
